(function() {var implementors = {};
implementors["spella"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>&lt;<a class=\"struct\" href=\"spella/algebra/systems/struct.All.html\" title=\"struct spella::algebra::systems::All\">All</a>&gt; for <a class=\"struct\" href=\"spella/algebra/systems/struct.All.html\" title=\"struct spella::algebra::systems::All\">All</a>","synthetic":false,"types":["spella::algebra::systems::all::All"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>&lt;<a class=\"struct\" href=\"spella/algebra/systems/struct.Any.html\" title=\"struct spella::algebra::systems::Any\">Any</a>&gt; for <a class=\"struct\" href=\"spella/algebra/systems/struct.Any.html\" title=\"struct spella::algebra::systems::Any\">Any</a>","synthetic":false,"types":["spella::algebra::systems::any::Any"]},{"text":"impl&lt;T:&nbsp;<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>&lt;<a class=\"struct\" href=\"spella/algebra/systems/struct.First.html\" title=\"struct spella::algebra::systems::First\">First</a>&lt;T&gt;&gt; for <a class=\"struct\" href=\"spella/algebra/systems/struct.First.html\" title=\"struct spella::algebra::systems::First\">First</a>&lt;T&gt;","synthetic":false,"types":["spella::algebra::systems::first::First"]},{"text":"impl&lt;T:&nbsp;<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>&lt;<a class=\"struct\" href=\"spella/algebra/systems/struct.Last.html\" title=\"struct spella::algebra::systems::Last\">Last</a>&lt;T&gt;&gt; for <a class=\"struct\" href=\"spella/algebra/systems/struct.Last.html\" title=\"struct spella::algebra::systems::Last\">Last</a>&lt;T&gt;","synthetic":false,"types":["spella::algebra::systems::last::Last"]},{"text":"impl&lt;T:&nbsp;<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>&lt;<a class=\"struct\" href=\"spella/algebra/systems/struct.Max.html\" title=\"struct spella::algebra::systems::Max\">Max</a>&lt;T&gt;&gt; for <a class=\"struct\" href=\"spella/algebra/systems/struct.Max.html\" title=\"struct spella::algebra::systems::Max\">Max</a>&lt;T&gt;","synthetic":false,"types":["spella::algebra::systems::max::Max"]},{"text":"impl&lt;T:&nbsp;<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>&lt;<a class=\"struct\" href=\"spella/algebra/systems/struct.Min.html\" title=\"struct spella::algebra::systems::Min\">Min</a>&lt;T&gt;&gt; for <a class=\"struct\" href=\"spella/algebra/systems/struct.Min.html\" title=\"struct spella::algebra::systems::Min\">Min</a>&lt;T&gt;","synthetic":false,"types":["spella::algebra::systems::min::Min"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>&lt;<a class=\"struct\" href=\"spella/byte/struct.ByteChar.html\" title=\"struct spella::byte::ByteChar\">ByteChar</a>&gt; for <a class=\"struct\" href=\"spella/byte/struct.ByteChar.html\" title=\"struct spella::byte::ByteChar\">ByteChar</a>","synthetic":false,"types":["spella::byte::byte_char::ByteChar"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()