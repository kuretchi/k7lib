(function() {var implementors = {};
implementors["spella"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"struct\" href=\"spella/byte/struct.ParseByteCharError.html\" title=\"struct spella::byte::ParseByteCharError\">ParseByteCharError</a>","synthetic":false,"types":["spella::byte::from_byte_str::ParseByteCharError"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"enum\" href=\"spella/byte/enum.ParseByteStringError.html\" title=\"enum spella::byte::ParseByteStringError\">ParseByteStringError</a>","synthetic":false,"types":["spella::byte::from_byte_str::ParseByteStringError"]},{"text":"impl&lt;T:&nbsp;<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/str/trait.FromStr.html\" title=\"trait core::str::FromStr\">FromStr</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"struct\" href=\"spella/byte/struct.ParseFromStrError.html\" title=\"struct spella::byte::ParseFromStrError\">ParseFromStrError</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T::<a class=\"type\" href=\"https://doc.rust-lang.org/nightly/core/str/trait.FromStr.html#associatedtype.Err\" title=\"type core::str::FromStr::Err\">Err</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a>,&nbsp;</span>","synthetic":false,"types":["spella::byte::from_byte_str::ParseFromStrError"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()